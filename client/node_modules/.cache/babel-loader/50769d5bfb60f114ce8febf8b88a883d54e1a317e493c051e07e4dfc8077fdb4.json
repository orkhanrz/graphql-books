{"ast":null,"code":"var _jsxFileName = \"/Users/orkhanrzali/Desktop/graphql/client/src/components/AddBook.js\",\n  _s = $RefreshSig$();\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddBook() {\n  _s();\n  const {\n    book,\n    setBook\n  } = useState({\n    name: \"\",\n    genre: \"\",\n    author: \"\"\n  });\n  const {\n    data,\n    loading\n  } = useQuery(getAuthorsQuery);\n  const displayAuthors = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Authors are loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this);\n    return data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: author.name\n    }, author.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Book name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), displayAuthors()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(AddBook, \"PTtj1XreNqWOBTFjVzDibKUYRPw=\", false, function () {\n  return [useQuery];\n});\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["gql","useQuery","useState","jsxDEV","_jsxDEV","AddBook","_s","book","setBook","name","genre","author","data","loading","getAuthorsQuery","displayAuthors","children","fileName","_jsxFileName","lineNumber","columnNumber","authors","map","id","className","htmlFor","type","_c","$RefreshReg$"],"sources":["/Users/orkhanrzali/Desktop/graphql/client/src/components/AddBook.js"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\n\nfunction AddBook() {\n  const { book, setBook } = useState({ name: \"\", genre: \"\", author: \"\" });\n  const { data, loading } = useQuery(getAuthorsQuery);\n\n  const displayAuthors = () => {\n    if (loading) return <option>Authors are loading...</option>;\n\n    return data.authors.map((author) => (\n      <option key={author.id}>{author.name}</option>\n    ));\n  };\n\n  return (\n    <form id=\"add-book\">\n      <div className=\"field\">\n        <label htmlFor=\"name\">Book name: </label>\n        <input type=\"text\" name=\"name\" />\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"genre\">Genre: </label>\n        <input type=\"text\" name=\"genre\" />\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"author\">Author:</label>\n        <select name=\"author\">\n          <option>Select Author</option>\n          {displayAuthors()}\n        </select>\n      </div>\n      <button>+</button>\n    </form>\n  );\n}\n\nexport default AddBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}