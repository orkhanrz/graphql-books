{"ast":null,"code":"var _jsxFileName = \"/Users/orkhanrzali/Desktop/graphql/client/src/components/Book.js\",\n  _s = $RefreshSig$();\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBooksQuery = gql`\n  {\n    books {\n      id\n      name\n      genre\n    }\n  }\n`;\nfunction BookList() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  const displayBooks = () => {\n    if (data.books.length) {\n      return data.books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: book.name\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 39\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no books in the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"book-list\",\n    children: displayBooks()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["useQuery","gql","jsxDEV","_jsxDEV","getBooksQuery","BookList","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","displayBooks","books","length","map","book","name","id","_c","$RefreshReg$"],"sources":["/Users/orkhanrzali/Desktop/graphql/client/src/components/Book.js"],"sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst getBooksQuery = gql`\n  {\n    books {\n      id\n      name\n      genre\n    }\n  }\n`;\n\nfunction BookList() {\n  const { loading, error, data } = useQuery(getBooksQuery);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error : {error.message}</p>;\n\n  const displayBooks = () => {\n    if(data.books.length){\n        return data.books.map(book => <li key={book.id}>{book.name}</li>);\n    } else {\n        return <p>There are no books in the database.</p>\n    }\n  };\n\n  return (\n    <ul id=\"book-list\">\n      {displayBooks()}\n    </ul>\n  );\n}\n\nexport default BookList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACI,aAAa,CAAC;EACxD,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,GAAG,UAAQ,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhD,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAGP,IAAI,CAACQ,KAAK,CAACC,MAAM,EAAC;MACjB,OAAOT,IAAI,CAACQ,KAAK,CAACE,GAAG,CAACC,IAAI,iBAAIjB,OAAA;QAAAO,QAAA,EAAmBU,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;IACrE,CAAC,MAAM;MACH,oBAAOX,OAAA;QAAAO,QAAA,EAAG;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACrD;EACF,CAAC;EAED,oBACEX,OAAA;IAAImB,EAAE,EAAC,WAAW;IAAAZ,QAAA,EACfM,YAAY,CAAC;EAAC;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAET;AAACR,EAAA,CAlBQD,QAAQ;EAAA,QACkBL,QAAQ;AAAA;AAAAuB,EAAA,GADlClB,QAAQ;AAoBjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}