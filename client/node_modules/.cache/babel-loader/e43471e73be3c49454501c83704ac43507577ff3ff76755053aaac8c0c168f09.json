{"ast":null,"code":"import { gql } from \"@apollo/client\";\nconst getBooksQuery = gql`\n  {\n    books {\n      id\n      name\n      genre\n    }\n  }\n`;\nconst getAuthorsQuery = gql`\n  {\n    authors {\n      id\n      name\n      age\n    }\n  }\n`;\nconst AddBookMutation = (name, genre, authorId) => gql`\n  mutation {\n     addBook(name: \"${name}\", genre: \"${genre}\", authorId: \"${authorId}\"){\n      name\n      id\n     }\n  }\n`;\n_c = AddBookMutation;\nexport { getAuthorsQuery, getBooksQuery, AddBookMutation };\nvar _c;\n$RefreshReg$(_c, \"AddBookMutation\");","map":{"version":3,"names":["gql","getBooksQuery","getAuthorsQuery","AddBookMutation","name","genre","authorId","_c","$RefreshReg$"],"sources":["/Users/orkhanrzali/Desktop/graphql/client/src/queries/queries.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nconst getBooksQuery = gql`\n  {\n    books {\n      id\n      name\n      genre\n    }\n  }\n`;\n\nconst getAuthorsQuery = gql`\n  {\n    authors {\n      id\n      name\n      age\n    }\n  }\n`;\n\nconst AddBookMutation = (name, genre, authorId) => gql`\n  mutation {\n     addBook(name: \"${name}\", genre: \"${genre}\", authorId: \"${authorId}\"){\n      name\n      id\n     }\n  }\n`;\n\nexport { getAuthorsQuery, getBooksQuery, AddBookMutation };\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMG,eAAe,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAKN,GAAI;AACvD;AACA,sBAAsBI,IAAK,cAAaC,KAAM,iBAAgBC,QAAS;AACvE;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIJ,eAAe;AASrB,SAASD,eAAe,EAAED,aAAa,EAAEE,eAAe;AAAG,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}